{"remainingRequest":"/Users/encepsupriatna/Downloads/bootstrap-vue-argon-dashboard-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/encepsupriatna/Downloads/bootstrap-vue-argon-dashboard-master/src/components/Navbar/BaseNav.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/encepsupriatna/Downloads/bootstrap-vue-argon-dashboard-master/src/components/Navbar/BaseNav.vue","mtime":1607281908000},{"path":"/Users/encepsupriatna/Downloads/bootstrap-vue-argon-dashboard-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/encepsupriatna/Downloads/bootstrap-vue-argon-dashboard-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/encepsupriatna/Downloads/bootstrap-vue-argon-dashboard-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/encepsupriatna/Downloads/bootstrap-vue-argon-dashboard-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'base-nav',\n  props: {\n    show: {\n      type: Boolean,\n      default: false,\n      description:\n        'Whether navbar menu is shown (valid for viewports < specified by `expand` prop)'\n    },\n    transparent: {\n      type: Boolean,\n      default: false,\n      description: 'Whether navbar is transparent'\n    },\n    expand: {\n      type: String,\n      default: 'lg',\n      description: 'Breakpoint where nav should expand'\n    },\n    menuClasses: {\n      type: [String, Object, Array],\n      default: '',\n      description:\n        'Navbar menu (items) classes. Can be used to align menu items to the right/left'\n    },\n    containerClasses: {\n      type: [String, Object, Array],\n      default: 'container',\n      description:\n        'Container classes. Can be used to control container classes (contains both navbar brand and menu items)'\n    },\n    type: {\n      type: String,\n      default: '',\n      validator(value) {\n        return [\n          '',\n          'dark',\n          'success',\n          'danger',\n          'warning',\n          'white',\n          'primary',\n          'light',\n          'info',\n          'vue'\n        ].includes(value);\n      },\n      description: 'Navbar color type'\n    }\n  },\n  model: {\n    prop: 'show',\n    event: 'change'\n  },\n  computed: {\n    classes() {\n      let color = `bg-${this.type}`;\n      let classes = [\n        { 'navbar-transparent': this.transparent },\n        { [`navbar-expand-${this.expand}`]: this.expand }\n      ];\n      if (this.position) {\n        classes.push(`navbar-${this.position}`);\n      }\n      if (!this.transparent) {\n        classes.push(color);\n      }\n      return classes;\n    },\n    hasMenu() {\n      return this.$slots.default;\n    }\n  },\n  methods: {\n    toggleMenu() {\n      this.$emit('change', !this.show);\n    },\n    closeMenu() {\n      this.$emit('change', false);\n    }\n  }\n};\n",{"version":3,"sources":["BaseNav.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BaseNav.vue","sourceRoot":"src/components/Navbar","sourcesContent":["<template>\n  <b-navbar toggleable :class=\"classes\">\n    <div :class=\"containerClasses\">\n      <slot name=\"brand\"></slot>\n\n      <slot name=\"toggle-button\">\n        <button\n          class=\"navbar-toggler collapsed\"\n          v-if=\"hasMenu\"\n          type=\"button\"\n          @click=\"toggleMenu\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span class=\"navbar-toggler-bar navbar-kebab\"></span>\n          <span class=\"navbar-toggler-bar navbar-kebab\"></span>\n          <span class=\"navbar-toggler-bar navbar-kebab\"></span>\n        </button>\n      </slot>\n\n      <b-navbar-toggle\n        target=\"nav-text-collapse\"\n        @click.stop=\"toggleMenu\">\n      </b-navbar-toggle>\n\n      <b-collapse\n        is-nav\n        id=\"nav-text-collapse\"\n        class=\"navbar-custom-collapse collapse\"\n        :class=\"menuClasses\"\n        :visible=\"show\"\n        v-click-outside=\"closeMenu\">\n        <slot :close-menu=\"closeMenu\"></slot>\n      </b-collapse>\n    </div>\n  </b-navbar>\n</template>\n<script>\nexport default {\n  name: 'base-nav',\n  props: {\n    show: {\n      type: Boolean,\n      default: false,\n      description:\n        'Whether navbar menu is shown (valid for viewports < specified by `expand` prop)'\n    },\n    transparent: {\n      type: Boolean,\n      default: false,\n      description: 'Whether navbar is transparent'\n    },\n    expand: {\n      type: String,\n      default: 'lg',\n      description: 'Breakpoint where nav should expand'\n    },\n    menuClasses: {\n      type: [String, Object, Array],\n      default: '',\n      description:\n        'Navbar menu (items) classes. Can be used to align menu items to the right/left'\n    },\n    containerClasses: {\n      type: [String, Object, Array],\n      default: 'container',\n      description:\n        'Container classes. Can be used to control container classes (contains both navbar brand and menu items)'\n    },\n    type: {\n      type: String,\n      default: '',\n      validator(value) {\n        return [\n          '',\n          'dark',\n          'success',\n          'danger',\n          'warning',\n          'white',\n          'primary',\n          'light',\n          'info',\n          'vue'\n        ].includes(value);\n      },\n      description: 'Navbar color type'\n    }\n  },\n  model: {\n    prop: 'show',\n    event: 'change'\n  },\n  computed: {\n    classes() {\n      let color = `bg-${this.type}`;\n      let classes = [\n        { 'navbar-transparent': this.transparent },\n        { [`navbar-expand-${this.expand}`]: this.expand }\n      ];\n      if (this.position) {\n        classes.push(`navbar-${this.position}`);\n      }\n      if (!this.transparent) {\n        classes.push(color);\n      }\n      return classes;\n    },\n    hasMenu() {\n      return this.$slots.default;\n    }\n  },\n  methods: {\n    toggleMenu() {\n      this.$emit('change', !this.show);\n    },\n    closeMenu() {\n      this.$emit('change', false);\n    }\n  }\n};\n</script>\n<style></style>\n"]}]}