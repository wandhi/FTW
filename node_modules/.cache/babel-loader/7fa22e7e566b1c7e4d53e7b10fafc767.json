{"remainingRequest":"/Users/encepsupriatna/Downloads/bootstrap-vue-argon-dashboard-master/node_modules/babel-loader/lib/index.js!/Users/encepsupriatna/Downloads/bootstrap-vue-argon-dashboard-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/encepsupriatna/Downloads/bootstrap-vue-argon-dashboard-master/src/components/Charts/config.js","dependencies":[{"path":"/Users/encepsupriatna/Downloads/bootstrap-vue-argon-dashboard-master/src/components/Charts/config.js","mtime":1607281908000},{"path":"/Users/encepsupriatna/Downloads/bootstrap-vue-argon-dashboard-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/encepsupriatna/Downloads/bootstrap-vue-argon-dashboard-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/encepsupriatna/Downloads/bootstrap-vue-argon-dashboard-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/encepsupriatna/Downloads/bootstrap-vue-argon-dashboard-master/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/web.dom.iterable\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { parseOptions } from \"@/components/Charts/optionHelpers\";\nimport Chart from 'chart.js';\nexport var Charts = {\n  mode: 'light',\n  //(themeMode) ? themeMode : 'light';\n  fonts: {\n    base: 'Open Sans'\n  },\n  colors: {\n    gray: {\n      100: '#f6f9fc',\n      200: '#e9ecef',\n      300: '#dee2e6',\n      400: '#ced4da',\n      500: '#adb5bd',\n      600: '#8898aa',\n      700: '#525f7f',\n      800: '#32325d',\n      900: '#212529'\n    },\n    theme: {\n      'default': '#172b4d',\n      'primary': '#5e72e4',\n      'secondary': '#f4f5f7',\n      'info': '#11cdef',\n      'success': '#2dce89',\n      'danger': '#f5365c',\n      'warning': '#fb6340'\n    },\n    black: '#12263F',\n    white: '#FFFFFF',\n    transparent: 'transparent'\n  }\n};\n\nfunction chartOptions() {\n  var colors = Charts.colors,\n      mode = Charts.mode,\n      fonts = Charts.fonts; // Options\n\n  var options = {\n    defaults: {\n      global: {\n        responsive: true,\n        maintainAspectRatio: false,\n        defaultColor: mode === 'dark' ? colors.gray[700] : colors.gray[600],\n        defaultFontColor: mode === 'dark' ? colors.gray[700] : colors.gray[600],\n        defaultFontFamily: fonts.base,\n        defaultFontSize: 13,\n        layout: {\n          padding: 0\n        },\n        legend: {\n          display: false,\n          position: 'bottom',\n          labels: {\n            usePointStyle: true,\n            padding: 16\n          }\n        },\n        elements: {\n          point: {\n            radius: 0,\n            backgroundColor: colors.theme['primary']\n          },\n          line: {\n            tension: .4,\n            borderWidth: 4,\n            borderColor: colors.theme['primary'],\n            backgroundColor: colors.transparent,\n            borderCapStyle: 'rounded'\n          },\n          rectangle: {\n            backgroundColor: colors.theme['warning']\n          },\n          arc: {\n            backgroundColor: colors.theme['primary'],\n            borderColor: mode == 'dark' ? colors.gray[800] : colors.white,\n            borderWidth: 4\n          }\n        },\n        tooltips: {\n          enabled: true,\n          mode: 'index',\n          intersect: false\n        }\n      },\n      pie: {\n        tooltips: {\n          mode: 'point'\n        }\n      },\n      doughnut: {\n        tooltips: {\n          mode: 'point'\n        },\n        cutoutPercentage: 83,\n        legendCallback: function legendCallback(chart) {\n          var data = chart.data;\n          var content = '';\n          data.labels.forEach(function (label, index) {\n            var bgColor = data.datasets[0].backgroundColor[index];\n            content += '<span class=\"chart-legend-item\">';\n            content += '<i class=\"chart-legend-indicator\" style=\"background-color: ' + bgColor + '\"></i>';\n            content += label;\n            content += '</span>';\n          });\n          return content;\n        }\n      }\n    }\n  }; // yAxes\n\n  Chart.scaleService.updateScaleDefaults('linear', {\n    gridLines: {\n      borderDash: [2],\n      borderDashOffset: [2],\n      color: mode === 'dark' ? colors.gray[900] : colors.gray[200],\n      drawBorder: false,\n      drawTicks: true,\n      zeroLineWidth: 1,\n      zeroLineColor: mode === 'dark' ? colors.gray[900] : colors.gray[200],\n      zeroLineBorderDash: [2],\n      zeroLineBorderDashOffset: [2]\n    },\n    ticks: {\n      beginAtZero: true,\n      padding: 10,\n      callback: function callback(value) {\n        if (!(value % 10)) {\n          return value;\n        }\n      }\n    }\n  }); // xAxes\n\n  Chart.scaleService.updateScaleDefaults('category', {\n    gridLines: {\n      drawBorder: false,\n      drawOnChartArea: false,\n      drawTicks: false,\n      lineWidth: 1,\n      zeroLineWidth: 1\n    },\n    ticks: {\n      padding: 20\n    },\n    maxBarThickness: 10\n  });\n  return options;\n}\n\n;\nvar initialized = false;\nexport function initGlobalOptions() {\n  if (initialized) {\n    return;\n  }\n\n  parseOptions(Chart, chartOptions());\n  initialized = true;\n}\nexport var basicOptions = {\n  maintainAspectRatio: false,\n  legend: {\n    display: false\n  },\n  responsive: true\n};\nexport var blueChartOptions = {\n  scales: {\n    yAxes: [{\n      gridLines: {\n        color: Charts.colors.gray[700],\n        zeroLineColor: Charts.colors.gray[700]\n      }\n    }]\n  }\n};\nexport var lineChartOptionsBlue = _objectSpread(_objectSpread({}, basicOptions), {}, {\n  tooltips: {\n    backgroundColor: '#f5f5f5',\n    titleFontColor: '#333',\n    bodyFontColor: '#666',\n    bodySpacing: 4,\n    xPadding: 12,\n    mode: 'nearest',\n    intersect: 0,\n    position: 'nearest'\n  },\n  responsive: true,\n  scales: {\n    yAxes: [{\n      barPercentage: 1.6,\n      gridLines: {\n        drawBorder: false,\n        color: 'rgba(29,140,248,0.0)',\n        zeroLineColor: 'transparent'\n      },\n      ticks: {\n        suggestedMin: 60,\n        suggestedMax: 125,\n        padding: 20,\n        fontColor: '#9e9e9e'\n      }\n    }],\n    xAxes: [{\n      barPercentage: 1.6,\n      gridLines: {\n        drawBorder: false,\n        color: 'rgba(29,140,248,0.1)',\n        zeroLineColor: 'transparent'\n      },\n      ticks: {\n        padding: 20,\n        fontColor: '#9e9e9e'\n      }\n    }]\n  }\n});",{"version":3,"sources":["/Users/encepsupriatna/Downloads/bootstrap-vue-argon-dashboard-master/src/components/Charts/config.js"],"names":["parseOptions","Chart","Charts","mode","fonts","base","colors","gray","theme","black","white","transparent","chartOptions","options","defaults","global","responsive","maintainAspectRatio","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","layout","padding","legend","display","position","labels","usePointStyle","elements","point","radius","backgroundColor","line","tension","borderWidth","borderColor","borderCapStyle","rectangle","arc","tooltips","enabled","intersect","pie","doughnut","cutoutPercentage","legendCallback","chart","data","content","forEach","label","index","bgColor","datasets","scaleService","updateScaleDefaults","gridLines","borderDash","borderDashOffset","color","drawBorder","drawTicks","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","ticks","beginAtZero","callback","value","drawOnChartArea","lineWidth","maxBarThickness","initialized","initGlobalOptions","basicOptions","blueChartOptions","scales","yAxes","lineChartOptionsBlue","titleFontColor","bodyFontColor","bodySpacing","xPadding","barPercentage","suggestedMin","suggestedMax","fontColor","xAxes"],"mappings":"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","sourcesContent":["import { parseOptions } from \"@/components/Charts/optionHelpers\";\nimport Chart from 'chart.js'\n\nexport const Charts = {\n  mode: 'light',//(themeMode) ? themeMode : 'light';\n  fonts: {\n    base: 'Open Sans'\n  },\n  colors: {\n    gray: {\n      100: '#f6f9fc',\n      200: '#e9ecef',\n      300: '#dee2e6',\n      400: '#ced4da',\n      500: '#adb5bd',\n      600: '#8898aa',\n      700: '#525f7f',\n      800: '#32325d',\n      900: '#212529'\n    },\n    theme: {\n      'default': '#172b4d',\n      'primary': '#5e72e4',\n      'secondary': '#f4f5f7',\n      'info': '#11cdef',\n      'success': '#2dce89',\n      'danger': '#f5365c',\n      'warning': '#fb6340'\n    },\n    black: '#12263F',\n    white: '#FFFFFF',\n    transparent: 'transparent',\n  }\n};\n\nfunction chartOptions() {\n  let { colors, mode, fonts } = Charts;\n  // Options\n  let options = {\n    defaults: {\n      global: {\n        responsive: true,\n        maintainAspectRatio: false,\n        defaultColor: (mode === 'dark') ? colors.gray[700] : colors.gray[600],\n        defaultFontColor: (mode === 'dark') ? colors.gray[700] : colors.gray[600],\n        defaultFontFamily: fonts.base,\n        defaultFontSize: 13,\n        layout: {\n          padding: 0\n        },\n        legend: {\n          display: false,\n          position: 'bottom',\n          labels: {\n            usePointStyle: true,\n            padding: 16\n          }\n        },\n        elements: {\n          point: {\n            radius: 0,\n            backgroundColor: colors.theme['primary']\n          },\n          line: {\n            tension: .4,\n            borderWidth: 4,\n            borderColor: colors.theme['primary'],\n            backgroundColor: colors.transparent,\n            borderCapStyle: 'rounded'\n          },\n          rectangle: {\n            backgroundColor: colors.theme['warning']\n          },\n          arc: {\n            backgroundColor: colors.theme['primary'],\n            borderColor: (mode == 'dark') ? colors.gray[800] : colors.white,\n            borderWidth: 4\n          }\n        },\n        tooltips: {\n          enabled: true,\n          mode: 'index',\n          intersect: false,\n        }\n      },\n      pie: {\n        tooltips: {\n          mode: 'point'\n        }\n      },\n      doughnut: {\n        tooltips: {\n          mode: 'point'\n        },\n        cutoutPercentage: 83,\n        legendCallback: function (chart) {\n          let data = chart.data;\n          let content = '';\n\n          data.labels.forEach(function (label, index) {\n            let bgColor = data.datasets[0].backgroundColor[index];\n\n            content += '<span class=\"chart-legend-item\">';\n            content += '<i class=\"chart-legend-indicator\" style=\"background-color: ' + bgColor + '\"></i>';\n            content += label;\n            content += '</span>';\n          });\n\n          return content;\n        }\n      }\n    }\n  };\n\n  // yAxes\n  Chart.scaleService.updateScaleDefaults('linear', {\n    gridLines: {\n      borderDash: [2],\n      borderDashOffset: [2],\n      color: (mode === 'dark') ? colors.gray[900] : colors.gray[200],\n      drawBorder: false,\n      drawTicks: true,\n      zeroLineWidth: 1,\n      zeroLineColor: (mode === 'dark') ? colors.gray[900] : colors.gray[200],\n      zeroLineBorderDash: [2],\n      zeroLineBorderDashOffset: [2]\n    },\n    ticks: {\n      beginAtZero: true,\n      padding: 10,\n      callback: function (value) {\n        if (!(value % 10)) {\n          return value\n        }\n      }\n    }\n  });\n\n  // xAxes\n  Chart.scaleService.updateScaleDefaults('category', {\n    gridLines: {\n      drawBorder: false,\n      drawOnChartArea: false,\n      drawTicks: false,\n      lineWidth: 1,\n      zeroLineWidth: 1,\n    },\n    ticks: {\n      padding: 20\n    },\n    maxBarThickness: 10\n  });\n\n  return options;\n};\n\nlet initialized = false\n\nexport function initGlobalOptions() {\n  if (initialized) {\n    return\n  }\n  parseOptions(Chart, chartOptions());\n  initialized = true\n}\n\nexport const basicOptions = {\n  maintainAspectRatio: false,\n  legend: {\n    display: false\n  },\n  responsive: true\n};\nexport let blueChartOptions = {\n  scales: {\n    yAxes: [{\n      gridLines: {\n        color: Charts.colors.gray[700],\n        zeroLineColor: Charts.colors.gray[700]\n      }\n    }]\n  }\n};\n\nexport let lineChartOptionsBlue = {\n  ...basicOptions,\n  tooltips: {\n    backgroundColor: '#f5f5f5',\n    titleFontColor: '#333',\n    bodyFontColor: '#666',\n    bodySpacing: 4,\n    xPadding: 12,\n    mode: 'nearest',\n    intersect: 0,\n    position: 'nearest'\n  },\n  responsive: true,\n  scales: {\n    yAxes: [\n      {\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: 'rgba(29,140,248,0.0)',\n          zeroLineColor: 'transparent'\n        },\n        ticks: {\n          suggestedMin: 60,\n          suggestedMax: 125,\n          padding: 20,\n          fontColor: '#9e9e9e'\n        }\n      }\n    ],\n\n    xAxes: [\n      {\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: 'rgba(29,140,248,0.1)',\n          zeroLineColor: 'transparent'\n        },\n        ticks: {\n          padding: 20,\n          fontColor: '#9e9e9e'\n        }\n      }\n    ]\n  }\n};\n"]}]}