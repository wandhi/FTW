{"remainingRequest":"/Users/encepsupriatna/Downloads/bootstrap-vue-argon-dashboard-master/node_modules/babel-loader/lib/index.js!/Users/encepsupriatna/Downloads/bootstrap-vue-argon-dashboard-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/encepsupriatna/Downloads/bootstrap-vue-argon-dashboard-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/encepsupriatna/Downloads/bootstrap-vue-argon-dashboard-master/src/components/NotificationPlugin/Notification.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/encepsupriatna/Downloads/bootstrap-vue-argon-dashboard-master/src/components/NotificationPlugin/Notification.vue","mtime":1607281908000},{"path":"/Users/encepsupriatna/Downloads/bootstrap-vue-argon-dashboard-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/encepsupriatna/Downloads/bootstrap-vue-argon-dashboard-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/encepsupriatna/Downloads/bootstrap-vue-argon-dashboard-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/encepsupriatna/Downloads/bootstrap-vue-argon-dashboard-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'notification',\n  components: {\n    contentRender: {\n      props: ['component'],\n      render: function render(createElement) {\n        return createElement(this.component);\n      }\n    }\n  },\n  props: {\n    message: String,\n    title: {\n      type: String,\n      description: 'Notification title'\n    },\n    icon: {\n      type: String,\n      description: 'Notification icon'\n    },\n    verticalAlign: {\n      type: String,\n      default: 'top',\n      validator: function validator(value) {\n        var acceptedValues = ['top', 'bottom'];\n        return acceptedValues.indexOf(value) !== -1;\n      },\n      description: 'Vertical alignment of notification (top|bottom)'\n    },\n    horizontalAlign: {\n      type: String,\n      default: 'right',\n      validator: function validator(value) {\n        var acceptedValues = ['left', 'center', 'right'];\n        return acceptedValues.indexOf(value) !== -1;\n      },\n      description: 'Horizontal alignment of notification (left|center|right)'\n    },\n    type: {\n      type: String,\n      default: 'info',\n      validator: function validator(value) {\n        var acceptedValues = ['default', 'info', 'primary', 'danger', 'warning', 'success'];\n        return acceptedValues.indexOf(value) !== -1;\n      },\n      description: 'Notification type of notification (default|info|primary|danger|warning|success)'\n    },\n    timeout: {\n      type: Number,\n      default: 5000,\n      validator: function validator(value) {\n        return value >= 0;\n      },\n      description: 'Notification timeout (closes after X milliseconds). Default is 5000 (5s)'\n    },\n    timestamp: {\n      type: Date,\n      default: function _default() {\n        return new Date();\n      },\n      description: 'Notification timestamp (used internally to handle notification removal correctly)'\n    },\n    component: {\n      type: [Object, Function],\n      description: 'Custom content component. Cane be a `.vue` component or render function'\n    },\n    showClose: {\n      type: Boolean,\n      default: true,\n      description: 'Whether to show close button'\n    },\n    closeOnClick: {\n      type: Boolean,\n      default: true,\n      description: 'Whether to close notification when clicking it\\' body'\n    },\n    clickHandler: {\n      type: Function,\n      description: 'Custom notification click handler'\n    }\n  },\n  data: function data() {\n    return {\n      elmHeight: 0\n    };\n  },\n  computed: {\n    hasIcon: function hasIcon() {\n      return this.icon && this.icon.length > 0;\n    },\n    alertType: function alertType() {\n      return \"alert-\".concat(this.type);\n    },\n    customPosition: function customPosition() {\n      var _this = this;\n\n      var initialMargin = 20;\n      var alertHeight = this.elmHeight + 10;\n      var sameAlertsCount = this.$notifications.state.filter(function (alert) {\n        return alert.horizontalAlign === _this.horizontalAlign && alert.verticalAlign === _this.verticalAlign && alert.timestamp <= _this.timestamp;\n      }).length;\n\n      if (this.$notifications.settings.overlap) {\n        sameAlertsCount = 1;\n      }\n\n      var pixels = (sameAlertsCount - 1) * alertHeight + initialMargin;\n      var styles = {};\n\n      if (this.verticalAlign === 'top') {\n        styles.top = \"\".concat(pixels, \"px\");\n      } else {\n        styles.bottom = \"\".concat(pixels, \"px\");\n      }\n\n      return styles;\n    }\n  },\n  methods: {\n    close: function close() {\n      this.$emit('close', this.timestamp);\n    },\n    tryClose: function tryClose(evt) {\n      if (this.clickHandler) {\n        this.clickHandler(evt, this);\n      }\n\n      if (this.closeOnClick) {\n        this.close();\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.elmHeight = this.$el.clientHeight;\n\n    if (this.timeout) {\n      setTimeout(this.close, this.timeout);\n    }\n  }\n};",{"version":3,"sources":["Notification.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div\n    @click=\"tryClose\"\n    data-notify=\"container\"\n    class=\"alert alert-notify alert-dismissible\"\n    :class=\"[\n      { 'alert-with-icon': icon },\n      verticalAlign,\n      horizontalAlign,\n      alertType\n    ]\"\n    role=\"alert\"\n    :style=\"customPosition\"\n    data-notify-position=\"top-center\"\n  >\n    <template v-if=\"icon || $slots.icon\">\n      <slot name=\"icon\">\n            <span class=\"alert-icon\" data-notify=\"icon\">\n              <i :class=\"icon\"></i>\n            </span>\n      </slot>\n    </template>\n\n    <span class=\"alert-text\">\n\n      <span v-if=\"title\" class=\"title\">\n        <b>{{ title }}<br/></b>\n      </span>\n      <span v-if=\"message\" v-html=\"message\"></span>\n      <content-render\n        v-if=\"!message && component\"\n        :component=\"component\"\n      ></content-render>\n    </span>\n\n    <slot name=\"dismiss-icon\">\n      <button type=\"button\"\n              class=\"close\"\n              data-dismiss=\"alert\"\n              aria-label=\"Close\"\n              @click=\"close\">\n        <span aria-hidden=\"true\">Ã—</span>\n      </button>\n    </slot>\n  </div>\n</template>\n<script>\n  export default {\n    name: 'notification',\n    components: {\n      contentRender: {\n        props: ['component'],\n        render: function (createElement) {\n          return createElement(this.component)\n        }\n      }\n    },\n    props: {\n      message: String,\n      title: {\n        type: String,\n        description: 'Notification title'\n      },\n      icon: {\n        type: String,\n        description: 'Notification icon'\n      },\n      verticalAlign: {\n        type: String,\n        default: 'top',\n        validator: value => {\n          let acceptedValues = ['top', 'bottom'];\n          return acceptedValues.indexOf(value) !== -1;\n        },\n        description: 'Vertical alignment of notification (top|bottom)'\n      },\n      horizontalAlign: {\n        type: String,\n        default: 'right',\n        validator: value => {\n          let acceptedValues = ['left', 'center', 'right'];\n          return acceptedValues.indexOf(value) !== -1;\n        },\n        description: 'Horizontal alignment of notification (left|center|right)'\n      },\n      type: {\n        type: String,\n        default: 'info',\n        validator: value => {\n          let acceptedValues = [\n            'default',\n            'info',\n            'primary',\n            'danger',\n            'warning',\n            'success'\n          ];\n          return acceptedValues.indexOf(value) !== -1;\n        },\n        description: 'Notification type of notification (default|info|primary|danger|warning|success)'\n      },\n      timeout: {\n        type: Number,\n        default: 5000,\n        validator: value => {\n          return value >= 0;\n        },\n        description: 'Notification timeout (closes after X milliseconds). Default is 5000 (5s)'\n      },\n      timestamp: {\n        type: Date,\n        default: () => new Date(),\n        description: 'Notification timestamp (used internally to handle notification removal correctly)'\n      },\n      component: {\n        type: [Object, Function],\n        description: 'Custom content component. Cane be a `.vue` component or render function'\n      },\n      showClose: {\n        type: Boolean,\n        default: true,\n        description: 'Whether to show close button'\n      },\n      closeOnClick: {\n        type: Boolean,\n        default: true,\n        description: 'Whether to close notification when clicking it\\' body'\n      },\n      clickHandler: {\n        type: Function,\n        description: 'Custom notification click handler'\n      }\n    },\n    data() {\n      return {\n        elmHeight: 0\n      };\n    },\n    computed: {\n      hasIcon() {\n        return this.icon && this.icon.length > 0;\n      },\n      alertType() {\n        return `alert-${this.type}`;\n      },\n      customPosition() {\n        let initialMargin = 20;\n        let alertHeight = this.elmHeight + 10;\n        let sameAlertsCount = this.$notifications.state.filter(alert => {\n          return (\n            alert.horizontalAlign === this.horizontalAlign &&\n            alert.verticalAlign === this.verticalAlign &&\n            alert.timestamp <= this.timestamp\n          );\n        }).length;\n        if (this.$notifications.settings.overlap) {\n          sameAlertsCount = 1;\n        }\n        let pixels = (sameAlertsCount - 1) * alertHeight + initialMargin;\n        let styles = {};\n        if (this.verticalAlign === 'top') {\n          styles.top = `${pixels}px`;\n        } else {\n          styles.bottom = `${pixels}px`;\n        }\n        return styles;\n      }\n    },\n    methods: {\n      close() {\n        this.$emit('close', this.timestamp);\n      },\n      tryClose(evt) {\n        if (this.clickHandler) {\n          this.clickHandler(evt, this);\n        }\n        if (this.closeOnClick) {\n          this.close();\n        }\n      }\n    },\n    mounted() {\n      this.elmHeight = this.$el.clientHeight;\n      if (this.timeout) {\n        setTimeout(this.close, this.timeout);\n      }\n    }\n  };\n</script>\n<style lang=\"scss\">\n  .notifications .alert {\n    position: fixed;\n    z-index: 10000;\n\n    &[data-notify='container'] {\n      max-width: 500px;\n    }\n\n    &.center {\n      margin: 0 auto;\n    }\n    &.left {\n      left: 20px;\n    }\n    &.right {\n      right: 20px;\n    }\n  }\n</style>\n"],"sourceRoot":"src/components/NotificationPlugin"}]}